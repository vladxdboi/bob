name: bob

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  install-pip-deps:
    runs-on: self-hosted
    steps:
      - name: Clone python-greetings repository
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: python-greetings

      - name: Clone course-js-api-framework repository
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: course-js-api-framework

      - name: Install dependencies
        working-directory: python-greetings
        run: |
          echo "Starting dependency installation..."
          pip3 install -r requirements.txt

  deploy-to-dev:
    runs-on: self-hosted
    needs: install-pip-deps
    steps:
      - name: Stop existing service
        working-directory: python-greetings
        run: | 
            pm2 delete "greetings-app-dev"
            if ($?) { Write-Host "Service stopped successfully" } else { Write-Host "Service not found, continuing..." }
            exit 0
      - name: Start application
        working-directory: python-greetings
        shell: cmd
        run: pm2 start -f app.py --name greetings-app-dev -- --port 7001

  tests-on-dev:
    runs-on: self-hosted
    needs: deploy-to-dev
    steps:
      - name: Installing dependencies
        working-directory: course-js-api-framework
        run: npm install
      - name: Running test
        working-directory: course-js-api-framework
        run: npm run greetings greetings_dev
        
  deploy-to-staging:
    runs-on: self-hosted
    needs: tests-on-dev
    steps:
      - name: Stop existing service
        working-directory: python-greetings
        run: | 
            pm2 delete "greetings-app-staging"
            if ($?) { Write-Host "Service stopped successfully" } else { Write-Host "Service not found, continuing..." }
            exit 0
      - name: Start application
        working-directory: python-greetings
        shell: cmd
        run: pm2 start -f app.py --name greetings-app-staging -- --port 7002

  tests-on-staging:
    runs-on: self-hosted
    needs: deploy-to-staging
    steps:
      - name: Installing dependencies
        working-directory: course-js-api-framework
        run: npm install
      - name: Running test
        working-directory: course-js-api-framework
        run: npm run greetings greetings_stg

  deploy-to-preprod:
    runs-on: self-hosted
    needs: tests-on-staging
    steps:
      - name: Stop existing service
        working-directory: python-greetings
        run: | 
            pm2 delete "greetings-app-preprod"
            if ($?) { Write-Host "Service stopped successfully" } else { Write-Host "Service not found, continuing..." }
            exit 0
      - name: Start application
        working-directory: python-greetings
        run: pm2 start -f app.py --name "greetings-app-preprod" -- --port 7003

  tests-on-preprod:
    runs-on: self-hosted
    needs: deploy-to-preprod
    steps:
      - name: Installing dependencies
        working-directory: course-js-api-framework
        run: npm install
      - name: Running test
        working-directory: course-js-api-framework
        run: npm run greetings greetings_preprod

  deploy-to-prod:
    runs-on: self-hosted
    needs: tests-on-preprod
    steps:
      - name: Stop existing service
        working-directory: python-greetings
        run: | 
            pm2 delete "greetings-app-prod"
            if ($?) { Write-Host "Service stopped successfully" } else { Write-Host "Service not found, continuing..." }
            exit 0 
      - name: Start application
        working-directory: python-greetings
        run: pm2 start -f app.py --name "greetings-app-prod" -- --port 7004

  tests-on-prod:
    runs-on: self-hosted
    needs: deploy-to-prod
    steps:
      - name: Installing dependencies
        working-directory: course-js-api-framework
        run: npm install
      - name: Running test
        working-directory: course-js-api-framework
        run: npm run greetings greetings_prod
